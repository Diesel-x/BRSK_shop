@using Blazored.LocalStorage
@using Front.Services
@inject CartService CartService;
@inject ILocalStorageService localStorage
@inject IJSRuntime JS
@inject NavigationManager Navigation;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">БРСК шоп</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        
        @if (UserName != "")
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link d-flex flex-row justify-content-center align-items-center">
                <p class="text-light fs-4">@UserName</p>
            </NavLink>
        </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Каталог
            </NavLink>
        </div>
        @if (UserName != "")
        {
            <div class="nav-item px-3" @onclick="HandleLogout">
                <NavLink class="nav-link">
                    <span class="bi bi-plus-square-fill-nav-menu bg-danger" aria-hidden="true"></span> Выйти
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Войти
                </NavLink>
            </div>
        }

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="cart">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true">@CartService.CartItems.Count</span> Корзина 
            </NavLink>
        </div>

        @if (UserName != "")
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="orderspage">
                    <span class="bi bi bi-list-nested-nav-menu" aria-hidden="true"></span> Заказы
                </NavLink>
            </div>
        }

        @if (role == "1")
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="addproduct">
                    <span class="bi bi bi-list-nested-nav-menu" aria-hidden="true"></span> Добавить продукт
                </NavLink>
            </div>
        }
        @role
        
    </nav>
</div>

@code {
    string UserName = "";
    string Key = "";
    string role = "";
    private bool collapseNavMenu = true;


    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        Key = await localStorage.GetItemAsync<string>("key");

        if (Key != "" && Key != null)
        {
            JwtToken tokenData = JwtHelper.DecodeJwtToken(Key);
            UserName = tokenData.UserName;
            role = tokenData.UserRole;
        }
        await Task.Run(async () => // Кринж костыль, потому что страница автоматически не обновлялась при изменении CardItems
        {
            while (true)
            {
                StateHasChanged();
                await Task.Delay(100);
            }
        });
        await base.OnInitializedAsync();
    }

    private async Task HandleLogout()
    {
        Key = "";
        UserName = "";
        role = "";
        HttpClient httpclient = new HttpClient();
        var authService = new AuthService(httpclient, localStorage, Navigation);
        await authService.Logout();
        StateHasChanged();
    }
}
