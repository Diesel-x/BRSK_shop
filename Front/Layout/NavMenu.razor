@using Front.Services
@inject CartService CartService;

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Бырска шоп</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Каталог РАБотников
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="login">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Войти
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="cart">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true">@CartService.CartItems.Count</span> Корзина 
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="orderspage">
                <span class="bi bi bi-list-nested-nav-menu" aria-hidden="true"></span> Заказы
            </NavLink>
        </div>
    </nav>
</div>

@code {

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(async () => // Кринж кастыль, потому что страница автоматически не обновлялась при изменении CardItems
        {
            while (true)
            {
                StateHasChanged();
                await Task.Delay(100);
            }
        });
        await base.OnInitializedAsync();
    }
}
